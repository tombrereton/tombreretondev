diff --git a/node_modules/astro-integration-lottie/dist/loader.js b/node_modules/astro-integration-lottie/dist/loader.js
index b0b5f51..55e8659 100644
--- a/node_modules/astro-integration-lottie/dist/loader.js
+++ b/node_modules/astro-integration-lottie/dist/loader.js
@@ -1,18 +1,18 @@
-setTimeout(async () => {
+async function loadLottie(idToRender) {
     const DEFAULT = {
         player: "light",
         loop: true,
         autoplay: "visible",
         visibleThreshold: 0,
     };
-    const containers = [...document.querySelectorAll("[data-lottie]")].map(x => {
+    let containers = [...document.querySelectorAll("[data-lottie]")].map(x => {
         try {
             return [x, { ...DEFAULT, ...JSON.parse(x.getAttribute("data-lottie-data") || "") }];
         }
         catch (err) {
             console.warn("Cannot parse lottie animation data", x);
         }
-    }).filter(x => !!x);
+    }).filter(x => !!x)
     if (containers.length === 0) {
         // no lottie animation return
         return;
@@ -23,8 +23,8 @@ setTimeout(async () => {
         : import("lottie-web/build/player/lottie_light"))
         .then(x => x.default)
         .catch(err => {
-        console.warn("Cannot load lottie-web script", err);
-    });
+            console.warn("Cannot load lottie-web script", err);
+        });
     if (!lottie) {
         return;
     }
@@ -47,6 +47,7 @@ setTimeout(async () => {
         const animationData = animationDataMap.get(config.src);
         let player;
         if (animationData) {
+            container.innerHTML = '';
             const { loop, autoplay } = config;
             player = lottie.loadAnimation({
                 container,
@@ -54,6 +55,7 @@ setTimeout(async () => {
                 autoplay: autoplay === "visible" ? false : autoplay,
                 animationData,
                 rendererSettings: {
+                    preserveAspectRatio: config['aspect-ratio'],
                     viewBoxOnly: true,
                 },
             });
@@ -112,5 +114,7 @@ setTimeout(async () => {
     document.dispatchEvent(new CustomEvent("astro-lottie-loaded", {
         detail: window.astroLottie
     }));
-}, 0);
-export {};
+}
+window.loadLottie = loadLottie
+setTimeout(loadLottie, 0)
+export { };
\ No newline at end of file
